---
- name: Install Docker on all nodes
  hosts: all
  become: yes
  tasks:

    - name: Update APT cache (Ubuntu/Debian)
      apt:
        update_cache: yes
      when: ansible_os_family == "Debian"

    - name: Update YUM cache (CentOS/RHEL)
      yum:
        update_cache: yes
      when: ansible_os_family == "RedHat"

    - name: Install prerequisite packages (Ubuntu)
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
        state: present
      when: ansible_os_family == "Debian"

    - name: Install prerequisite packages (CentOS)
      yum:
        name:
          - yum-utils
          - device-mapper-persistent-data
          - lvm2
        state: present
      when: ansible_os_family == "RedHat"

    - name: Add Docker GPG key and repository (Ubuntu)
      block:
        - name: Add Docker's official GPG key
          ansible.builtin.apt_key:
            url: https://download.docker.com/linux/ubuntu/gpg
            state: present

        - name: Add Docker repository
          ansible.builtin.apt_repository:
            repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
            state: present
      when: ansible_os_family == "Debian"

    - name: Add Docker repository (CentOS)
      ansible.builtin.command: >
        yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
      when: ansible_os_family == "RedHat"

    - name: Install Docker Engine (Ubuntu)
      apt:
        name: docker-ce
        state: present
        update_cache: yes
      when: ansible_os_family == "Debian"

    - name: Install Docker Engine (CentOS)
      yum:
        name: docker-ce
        state: present
      when: ansible_os_family == "RedHat"

    - name: Install pip3 (Ubuntu)
      apt:
        name: python3-pip
        state: present
      when: ansible_os_family == "Debian"

    - name: Install pip3 (CentOS)
      yum:
        name: python3-pip
        state: present
      when: ansible_os_family == "RedHat"

    - name: Install Docker SDK for Python (Ubuntu)
      ansible.builtin.pip:
        name: docker
        state: present
        extra_args: --break-system-packages
      when: ansible_os_family == "Debian"

    - name: Install Docker SDK for Python (CentOS)
      ansible.builtin.pip:
        name: docker
        state: present
      when: ansible_os_family == "RedHat"

    - name: Ensure Docker service is started and enabled (all OS)
      ansible.builtin.service:
        name: docker
        state: started
        enabled: yes

    - name: Add user to Docker group
      user:
        name: "{{ lookup('env', 'USER') }}"
        groups: docker
        append: yes

